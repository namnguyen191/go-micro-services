version: "3"

services:
  caddy:
    image: namng191/micro-caddy:1.0.2
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  frontend:
    image: namng191/frontend:1.0.3
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "https://backend"

  broker-service:
    image: namng191/broker-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: namng191/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: namng191/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: namng191/logger-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    image: namng191/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_FROM_NAME: "Nam Nguyen"
      MAIL_FROM_ADDRESS: nam.nguyen@mydomain.com

  rabbitmq:
    image: "rabbitmq:3.10.7-alpine"
    deploy:
      mode: global

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: global

  logdb:
    image: "mongo:4.2.17-bionic"
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodata:/data/db

  postgres:
    image: "postgres:14.2"
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

volumes:
  mongodata:
  rabbitmq:
  caddy_data:
  caddy_config:
